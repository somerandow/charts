{{- define "common.resource.deployment" -}}
{{- range $key, $deployment := .Values.deployments }}
  {{- /* Check if deployment should be enabled */ -}}
  {{- $deploymentEnabled := false -}}
  {{- if hasKey $deployment "enabled" -}}
    {{- $deploymentEnabled = $deployment.enabled -}}
  {{- end -}}
  {{- if $deploymentEnabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.util.resourceName" (dict "rootCtx" $ "extraResourceName" $key) }}
  labels: {{ include "common.util.metadata.labels" $ | nindent 4}}
  annotations: {{empty .annotations | ternary (`{}`) (.annotations | toYaml | nindent 4) }}
spec:
  revisionHistoryLimit: {{ .revisionHistoryLimit | default 1 }}
  replicas: {{ .replicas | default 1 }}
  strategy:
    type: {{ .updateStrategy | default "Recreate" }}
  selector:
    matchLabels: {{ include "common.util.metadata.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels: {{ include "common.util.metadata.selectorLabels" $ | nindent 8 }}
    spec:
      # TODO handle service account creation
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext: {{ not (empty .context) | ternary (include "common.security.podContext" .context | nindent 8) `{}` }}
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers: {{- range $key, $container := .containers }}
        - name: {{ include "common.util.resourceName" (dict "rootCtx" $ "extraResourceName" $key) }}
          image: {{ (.image.tag | default "latest") | printf "%s:%s" .image.repository | quote }}
          imagePullPolicy: {{ .image.pullPolicy | default "IfNotPresent" }}
          securityContext: {{ not (empty .context) | ternary (include "common.security.containerContext" . | nindent 12) `{}` }}
          env: {{ not (empty .env) | ternary (.env | toYaml | nindent 12) `[]` }}
          ports: {{ not (empty .ports) | ternary (include "common.spec.ports" .ports | nindent 12) `[]` }}
          volumeMounts: {{ not (empty .volumeMounts) | ternary (include "common.spec.volumeMounts" .volumeMounts | trim | nindent 12) `[]` }}
          {{- if not (empty .probes) -}}
          {{- include "common.spec.probes" .probes | trim | nindent 10 }}
          {{- end }}
          resources: {{ include "common.spec.resources" . | nindent 12 }}
          {{- end }}
      volumes: {{ not (empty .volumes) | ternary (include "common.spec.volumes" (dict "rootCtx" $ "ctx" .volumes) | trim | nindent 8) `[]` }}
{{ end }}
{{- end -}}
{{- end -}}