{{- define "common.resource.service" -}}
{{- range $key, $service := .Values.services }}
  {{- /* Check if service should be enabled */ -}}
  {{- $serviceEnabled := false -}}
  {{- if hasKey $service "enabled" -}}
    {{- $serviceEnabled = $service.enabled -}}
  {{- end -}}
  {{- if $serviceEnabled -}}
---
apiVersion: v1
kind: Service
metadata:
  # TODO: Make the resourceName allow for nameoverrides, and also account for single-resource cases
  name: {{ include "common.util.resourceName" (dict "rootCtx" $ "extraResourceName" $key) }}
  labels: {{ include "common.util.metadata.labels" $ | nindent 4}}
  # TODO: Template annotations
  annotations: {}
spec:
  type: {{ $service.type | default "ClusterIP"}}
  ports:
    {{- range $port := $service.ports}}
    - port: {{ $port.port }}
      targetPort: {{ $port.target }}
      protocol: {{ $port.protocol | default "TCP" }}
      name: {{ $port.name }}
    {{- end }}
  selector:
    matchLabels: {{ include "common.util.metadata.selectorLabels" $ | nindent 6 }}
{{ end }}
{{- end -}}
{{- end -}}
