nameOverride: ""
services:
  main:
    enabled: false
    ports:
      - name: http
        port: 6767
        target: http
  api:
    enabled: false
    ports:
      - name: api
        port: 6768
        target: api
ingresses:
  main:
    enabled: false
    labels: {}
    annotations:
      cert-manager.io/cluster-issuer: acme
      external-dns.alpha.kubernetes.io/target: "wojoinc.xyz."
      dns.homelab.wojoinc.xyz/publish-external: "true"
      traefik.ingress.kubernetes.io/router.middlewares: media-forward-auth-all@kubernetescrd,media-forward-auth@kubernetescrd
    className: traefik-external
    tls:
      - host: "bazarr.wojoinc.xyz"
        secretName: "bazarr-cert"
    rules:
      - host: "bazarr.wojoinc.xyz"
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: bazarr
                port:
                  number: 6767

deployments:
  main:
    enabled: true
    context:
      fsGroup: 568
      gid: 568
      uid: 568
      extraGids:
        - 997
    volumes:
      config:
        type: pvc
      media:
        type: pvc
        name: media-local
    containers:
      test:
        image:
          repository: alpine
      main:
        env:
          - name: TZ
            value: America/Chicago
        image:
          repository: ghcr.io/onedr0p/bazarr
          tag: rolling
        resources:
          limits:
            cpu: "1"
            memory: 1024Mi
          requests:
            cpu: 25m
            memory: 100Mi
        ports:
          http:
            port: 6767
        probes:
          liveness:
            enabled: true
            port: 6767
          readiness:
            enabled: true
            port: 6767
          startup:
            enabled: true
            port: 6767
        volumeMounts:
          config:
            path: /config
          media:
            path: /media


# Default values for bazarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
